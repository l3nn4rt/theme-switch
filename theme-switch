#!/usr/bin/env bash
# Switch gtk themes in Gnome 3.
# @author: l3nn4rt

# SET HERE THE THEME COMBOS TO ITERATE OVER
# Notes:
# - strings must be separated by a single comma and no
# unquoted space (unquoted spaces will split combos);
# - set <SHELL> to '' for the default shell theme.
combos=(
	# '<GTK>','<ICON>','<SHELL>'
	'Adwaita','Adwaita',''
	'Adwaita-dark','Adwaita',''
	#'HighContrast','HighContrast',''
	#'Mojave-light','ePapirus','Mojave-light'
	#'Mojave-dark','ePapirus','Mojave-dark'
)

################################################################################

usage() {
	echo "Usage: $(basename $0)"
}

check_env() {
	err=0
	[[ ! "$XDG_SESSION_DESKTOP" =~ gnome* ]] && {
		echo "ERROR: Gnome is not the current desktop environment" >&2
		((err += 1))
	}
	hash gsettings 2>/dev/null || {
		echo "ERROR: gsettings not found" >&2
		((err += 2))
	}

	# ensure the needed extension is enabled
	gsettings set org.gnome.shell disable-user-extensions false
	gnome-shell-extension-tool --enable \
		'user-theme@gnome-shell-extensions.gcampax.github.com' 2>/dev/null

	return $err
}

# exit on environment error(s)
check_env || exit $?

check_combo() {
	IFS=, read gtk icon shell <<< "$1"
	err=0
	[ -f "/usr/share/themes/$gtk/index.theme" \
		-o -f "$HOME/.themes/$gtk/index.theme" ] || {
		echo "bad gtk: $gtk"
		((err += 1))
	}
	[ -f "/usr/share/icons/$icon/index.theme" \
		-o -f "$HOME/.icons/$icon/index.theme"  ] || {
		echo "bad icon: $icon"
		((err += 2))
	}
	[ -z "$shell" \
		-o -f "/usr/share/themes/$shell/gnome-shell/gnome-shell.css" \
		-o -f "$HOME/.themes/$shell/gnome-shell/gnome-shell.css" ] || {
		echo "bad shell: $shell"
		((err += 4))
	}
	return $err
}

get_combo() {
	gtk=$(gsettings get org.gnome.desktop.interface gtk-theme | tr -d \')
	icon=$(gsettings get org.gnome.desktop.interface icon-theme | tr -d \')
	shell=$(gsettings get org.gnome.shell.extensions.user-theme name | tr -d \')
	echo "$gtk,$icon,$shell"
}

set_combo() {
	IFS=, read gtk icon shell <<< "$1"
	# concurrent procs will slightly speed-up the script,
	# but won't gurantee the output correctness
	gsettings set org.gnome.desktop.interface gtk-theme "$gtk" #&
	gsettings set org.gnome.desktop.interface icon-theme "$icon" #&
	gsettings set org.gnome.shell.extensions.user-theme name "$shell" #&
}

print_combo() {
	IFS=, read gtk icon shell <<< "$(get_combo)"
	echo "{ gtk: '$gtk', icon: '$icon', shell: '$shell' }"
}

case $# in
0)
	printf "Previous: "; print_combo
	valid_combos=()
	curr=-1
	for i in $(seq 0 $((${#combos[@]} - 1))); do
		# skip broken combos
		check_combo "${combos[i]}" || \
			continue
		# save position of current combo in valid_combos
		[ $(get_combo) = "${combos[i]}" ] &&
			curr=${#valid_combos[@]}
		# add valid combo to valid_combos
		valid_combos+=("${combos[i]}")
	done

	# set the next valid combo
	[ ${#valid_combos[@]} -gt 0 ] &&
		set_combo  ${valid_combos[ (curr + 1) % ${#valid_combos[@]}]}

	printf " Current: "; print_combo
	;;
*)
	usage && false
	;;
esac

exit $?
